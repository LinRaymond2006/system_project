;DH:ROW
;DL:COLUMN
;BH:DISPLAY_PAGE(SETTED 0 IN MOST CASES)
DO_SET_CURSOR:
	PUSH AX
	MOV  AH, 02H      ; BIOS.SETCURSORPOSITION
	INT  0X10
	POP AX
	RET

DO_DISABLE_CURSOR:
	PUSHA
	MOV AH, 0X1
	MOV CH,0X2F
	INT 0X10
	POPA
	RET


;EAX:POITNTER TO THE STRING
;EBX:STRING ATTRIBUTE	(ONLY THE LOW 16BIT WILL BE USED)
;ECX:STRING LENGTH

;ATTRIBUTE:
;Bit(s)	Value
;0-7	ASCII code point
;8-11	Foreground color
;12-14	Background color
;15	Blink


;80 cols * 25 rols
;X:0~79
;Y:0~24
%DEFINE MAX_COL 80-1
%DEFINE MAX_ROL 25-1

DO_DISPLAY_TEXT:
	;do something here
	%

DO_CLEAR_SCR:
	PUSHA
	MOV	AX,	0600H
	MOV	BX,	0700H
	MOV	CX,	0
	MOV	DX,	0184FH
	INT	0X10
	POPA
	RET





%DEFINE EX_REG_SZ 0X4
;need 40*25 =1000 times
SCROLL_LINE:
	PUSHAD
	MOV SI, 160
	MOV DI, 0X000
	mov cx, 1000
	.1:
	mov ebp, DWORD [GS:SI]
	MOV DWORD [GS:DI], ebp
	add si, EX_REG_SZ
	add di, EX_REG_SZ
	loop .1
	.RETURN:
	POPAD
	DEC BYTE [CURSOR_Y]
	RET
