00000000000i[      ] Bochs x86 Emulator 2.7
00000000000i[      ]   Built from SVN snapshot on August  1, 2021
00000000000i[      ]   Timestamp: Sun Aug  1 10:07:00 CEST 2021
00000000000i[      ] System configuration
00000000000i[      ]   processors: 1 (cores=1, HT threads=1)
00000000000i[      ]   A20 line support: yes
00000000000i[      ] IPS is set to 4000000
00000000000i[      ] CPU configuration
00000000000i[      ]   SMP support: yes, quantum=16
00000000000i[      ]   level: 6
00000000000i[      ]   APIC support: xapic
00000000000i[      ]   FPU support: yes
00000000000i[      ]   MMX support: yes
00000000000i[      ]   3dnow! support: yes
00000000000i[      ]   SEP support: yes
00000000000i[      ]   SIMD support: sse2
00000000000i[      ]   XSAVE support: no 
00000000000i[      ]   AES support: no
00000000000i[      ]   SHA support: no
00000000000i[      ]   MOVBE support: no
00000000000i[      ]   ADX support: no
00000000000i[      ]   x86-64 support: yes
00000000000i[      ]   1G paging support: no
00000000000i[      ]   MWAIT support: yes
00000000000i[      ]   VMX support: 1
00000000000i[      ]   SVM support: no
00000000000i[      ] Optimization configuration
00000000000i[      ]   RepeatSpeedups support: yes
00000000000i[      ]   Fast function calls: yes
00000000000i[      ]   Handlers Chaining speedups: no
00000000000i[      ] Devices configuration
00000000000i[      ]   PCI support: i440FX i430FX i440BX
00000000000i[      ]   Network devices support: NE2000 E1000
00000000000i[      ]   Sound support: SB16 ES1370
00000000000i[      ]   USB support: UHCI OHCI EHCI xHCI
00000000000i[      ]   VGA extension support: vbe cirrus voodoo
00000000000i[IMG   ] Disk image modules
00000000000i[IMG   ]   flat concat sparse dll growing undoable volatile vbox
00000000000i[IMG   ]   vmware3 vmware4 vvfat vpc
00000000000i[NETCTL] Networking modules
00000000000i[NETCTL]   null slirp linux tuntap vnet socket vde
00000000000i[SNDCTL] Sound drivers
00000000000i[SNDCTL]   dummy oss file alsa sdl
00000000000i[USBCTL] Pluggable USB devices
00000000000i[USBCTL]   floppy disk cdrom mouse tablet keypad keyboard hub
00000000000i[USBCTL]   printer
00000000000i[MEM0  ] allocated memory at 0x7f83f945d010. after alignment, vector=0x7f83f945e000
00000000000i[MEM0  ] 32.00MB
00000000000i[MEM0  ] mem block size = 0x00020000, blocks=256
00000000000i[MEM0  ] rom at 0xfffe0000/131072 ('./run/bin/BIOS-bochs-latest')
00000000000i[CPU0  ] WARNING: 3DNow! is not implemented yet !
00000000000i[DEV   ] will paste characters every 100 iodev timer ticks
00000000000i[      ] lt_dlhandle is 0x564f62a092b0
00000000000i[PLUGIN] loaded plugin libbx_soundalsa.so
00000000000i[WAVOUT] ALSA: opened default PCM output device
00000000000i[WAVOUT] changed sample rate to 44101
00000000000i[      ] lt_dlhandle is 0x564f62a90120
00000000000i[PLUGIN] loaded plugin libbx_pci.so
00000000000i[      ] lt_dlhandle is 0x564f62a48ca0
00000000000i[PLUGIN] loaded plugin libbx_pci2isa.so
00000000000i[      ] lt_dlhandle is 0x564f62a92800
00000000000i[PLUGIN] loaded plugin libbx_usb_uhci.so
00000000000i[      ] lt_dlhandle is 0x564f62a94710
00000000000i[PLUGIN] loaded plugin libbx_acpi.so
00000000000i[      ] lt_dlhandle is 0x564f62a95220
00000000000i[PLUGIN] loaded plugin libbx_hpet.so
00000000000i[      ] lt_dlhandle is 0x564f62a960b0
00000000000i[PLUGIN] loaded plugin libbx_cmos.so
00000000000i[      ] lt_dlhandle is 0x564f62a968d0
00000000000i[PLUGIN] loaded plugin libbx_dma.so
00000000000i[      ] lt_dlhandle is 0x564f62a97250
00000000000i[PLUGIN] loaded plugin libbx_pic.so
00000000000i[      ] lt_dlhandle is 0x564f62a97a90
00000000000i[PLUGIN] loaded plugin libbx_pit.so
00000000000i[      ] lt_dlhandle is 0x564f62a98450
00000000000i[PLUGIN] loaded plugin libbx_vga.so
00000000000i[      ] lt_dlhandle is 0x564f62a98ce0
00000000000i[PLUGIN] loaded plugin libbx_floppy.so
00000000000i[      ] lt_dlhandle is 0x564f62a998a0
00000000000i[PLUGIN] loaded plugin libbx_ioapic.so
00000000000i[      ] lt_dlhandle is 0x564f62a9a1e0
00000000000i[PLUGIN] loaded plugin libbx_keyboard.so
00000000000i[      ] lt_dlhandle is 0x564f62a9ab00
00000000000i[PLUGIN] loaded plugin libbx_harddrv.so
00000000000i[      ] lt_dlhandle is 0x564f62a9cbf0
00000000000i[PLUGIN] loaded plugin libbx_pci_ide.so
00000000000i[PLUGIN] init_dev of 'pci' plugin device by virtual method
00000000000i[DEV   ] i440FX PMC present at device 0, function 0
00000000000i[PLUGIN] init_dev of 'pci2isa' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI-to-ISA bridge present at device 1, function 0
00000000000i[PLUGIN] init_dev of 'cmos' plugin device by virtual method
00000000000i[CMOS  ] Using local time for initial clock
00000000000i[CMOS  ] Setting initial clock to: Thu May  4 07:19:00 2023 (time0=1683155940)
00000000000i[PLUGIN] init_dev of 'dma' plugin device by virtual method
00000000000i[DMA   ] channel 4 used by cascade
00000000000i[PLUGIN] init_dev of 'pic' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'pit' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'vga' plugin device by virtual method
00000000000i[MEM0  ] Register memory access handlers: 0x0000000a0000 - 0x0000000bffff
00000000000i[VGA   ] interval=200000, mode=realtime
00000000000i[VGA   ] VSYNC using standard mode
00000000000i[MEM0  ] Register memory access handlers: 0x0000e0000000 - 0x0000e0ffffff
00000000000i[BXVGA ] VBE Bochs Display Extension Enabled
00000000000i[XGUI  ] test_alloc_colors: 16 colors available out of 16 colors tried
00000000000i[XGUI  ] font 8 wide x 16 high, display depth = 24
00000000000i[XGUI  ] maximum host resolution: x=1920 y=1030
00000000000i[MEM0  ] rom at 0xc0000/41984 ('./run/bin/vgabios.bin')
00000000000i[PLUGIN] init_dev of 'floppy' plugin device by virtual method
00000000000i[DMA   ] channel 2 used by Floppy Drive
00000000000i[FLOPPY] Using boot sequence disk, none, none
00000000000i[FLOPPY] Floppy boot signature check is enabled
00000000000i[PLUGIN] init_dev of 'acpi' plugin device by virtual method
00000000000i[DEV   ] ACPI Controller present at device 1, function 3
00000000000i[PLUGIN] init_dev of 'hpet' plugin device by virtual method
00000000000i[HPET  ] initializing HPET
00000000000i[MEM0  ] Register memory access handlers: 0x0000fed00000 - 0x0000fed003ff
00000000000i[PLUGIN] init_dev of 'ioapic' plugin device by virtual method
00000000000i[IOAPIC] initializing I/O APIC
00000000000i[MEM0  ] Register memory access handlers: 0x0000fec00000 - 0x0000fec00fff
00000000000i[IOAPIC] IOAPIC enabled (base address = 0xfec00000)
00000000000i[PLUGIN] init_dev of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'harddrv' plugin device by virtual method
00000000000i[HD    ] HD on ata0-0: './build/hd.iso', 'flat' mode
00000000000i[IMG   ] hd_size: 41803776
00000000000i[HD    ] ata0-0: autodetect geometry: CHS=81/16/63 (sector size=512)
00000000000i[HD    ] translation on ata0-0 set to 'none'
00000000000i[PLUGIN] init_dev of 'pci_ide' plugin device by virtual method
00000000000i[DEV   ] PIIX3 PCI IDE controller present at device 1, function 1
00000000000i[PLUGIN] init_dev of 'serial' plugin device by virtual method
00000000000i[SER   ] com1 at 0x03f8 irq 4 (mode: null)
00000000000i[PLUGIN] init_dev of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'parallel' plugin device by virtual method
00000000000i[PAR   ] parallel port 1 at 0x0378 irq 7
00000000000i[PLUGIN] init_dev of 'speaker' plugin device by virtual method
00000000000i[PCSPK ] Using lowlevel sound support for output
00000000000i[PLUGIN] init_dev of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] init_dev of 'usb_uhci' plugin device by virtual method
00000000000i[DEV   ] USB UHCI present at device 1, function 2
00000000000i[UHCI  ] USB UHCI initialized
00000000000i[PLUGIN] register state of 'pci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] register state of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] register state of 'dma' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pit' plugin device by virtual method
00000000000i[PLUGIN] register state of 'vga' plugin device by virtual method
00000000000i[PLUGIN] register state of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] register state of 'serial' plugin device by virtual method
00000000000i[PLUGIN] register state of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] register state of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] register state of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] register state of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] register state of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] register state of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] register state of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] register state of 'usb_uhci' plugin device by virtual method
00000000000i[PLUGIN] register state of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] register state of 'hpet' plugin device by virtual method
00000000000i[PLUGIN] register state of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] register state of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] register state of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] register state of 'pci_ide' plugin device by virtual method
00000000000i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00000000000i[CPU0  ] cpu hardware reset
00000000000i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00000000000i[CPU0  ] CPU[0] is the bootstrap processor
00000000000i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00000000000i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002028 17cbfbff
00000000000i[CPU0  ] CPUID[0x00000002]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00000000000i[CPU0  ] CPUID[0x80000000]: 80000008 756e6547 6c65746e 49656e69
00000000000i[CPU0  ] CPUID[0x80000001]: 00000633 00000000 00000101 ebd3f3ff
00000000000i[CPU0  ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00000000000i[CPU0  ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00000000000i[CPU0  ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00000000000i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00000000000i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00000000000i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00000000000i[CPU0  ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00000000000i[CPU0  ] CPU Features supported:
00000000000i[CPU0  ] 		x87
00000000000i[CPU0  ] 		486ni
00000000000i[CPU0  ] 		pentium_ni
00000000000i[CPU0  ] 		p6ni
00000000000i[CPU0  ] 		mmx
00000000000i[CPU0  ] 		3dnow!
00000000000i[CPU0  ] 		debugext
00000000000i[CPU0  ] 		vme
00000000000i[CPU0  ] 		pse
00000000000i[CPU0  ] 		pae
00000000000i[CPU0  ] 		pge
00000000000i[CPU0  ] 		pse36
00000000000i[CPU0  ] 		mtrr
00000000000i[CPU0  ] 		pat
00000000000i[CPU0  ] 		sysenter_sysexit
00000000000i[CPU0  ] 		clflush
00000000000i[CPU0  ] 		sse
00000000000i[CPU0  ] 		sse2
00000000000i[CPU0  ] 		mwait
00000000000i[CPU0  ] 		vmx
00000000000i[CPU0  ] 		longmode
00000000000i[CPU0  ] 		lm_lahf_sahf
00000000000i[CPU0  ] 		nx
00000000000i[CPU0  ] 		cmpxhg16b
00000000000i[CPU0  ] 		rdtscp
00000000000i[CPU0  ] 		ffxsr
00000000000i[CPU0  ] 		xapic
00000000000i[PLUGIN] reset of 'pci' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00000000000i[PLUGIN] reset of 'cmos' plugin device by virtual method
00000000000i[PLUGIN] reset of 'dma' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pit' plugin device by virtual method
00000000000i[PLUGIN] reset of 'vga' plugin device by virtual method
00000000000i[PLUGIN] reset of 'floppy' plugin device by virtual method
00000000000i[PLUGIN] reset of 'acpi' plugin device by virtual method
00000000000i[PLUGIN] reset of 'hpet' plugin device by virtual method
00000000000i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00000000000i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00000000000i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00000000000i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00000000000i[PLUGIN] reset of 'serial' plugin device by virtual method
00000000000i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00000000000i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00000000000i[PLUGIN] reset of 'iodebug' plugin device by virtual method
00000000000i[PLUGIN] reset of 'parallel' plugin device by virtual method
00000000000i[PLUGIN] reset of 'speaker' plugin device by virtual method
00000000000i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00000000000i[PLUGIN] reset of 'gameport' plugin device by virtual method
00000000000i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00000000000i[      ] Using debugger log file ./run/log/debug.log
00000000000i[      ] set SIGINT handler to bx_debug_ctrlc_handler
00000004661i[BIOS  ] $Revision: 12579 $ $Date: 2014-12-26 11:31:39 +0100 (Fr, 26. Dez 2014) $
00000319067i[KBD   ] reset-disable command received
00000321798i[BIOS  ] Starting rombios32
00000322236i[BIOS  ] Shutdown flag 0
00000322819i[BIOS  ] ram_size=0x02000000
00000323240i[BIOS  ] ram_end=32MB
00000363790i[BIOS  ] Found 1 cpu(s)
00000377994i[BIOS  ] bios_table_addr: 0x000fa498 end=0x000fcc00
00000615376i[XGUI  ] charmap update. Font is 9 x 16
00000705789i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001033718i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00001033737i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00001033756i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00001033775i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00001033785i[P2ISA ] write: ELCR2 = 0x0a
00001034555i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00001042278i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00001044557i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00001046675i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00001046900i[PIDE  ] BAR #4: i/o base address = 0xc000
00001047516i[BIOS  ] region 4: 0x0000c000
00001049527i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00001049727i[UHCI  ] BAR #4: i/o base address = 0xc020
00001050343i[BIOS  ] region 4: 0x0000c020
00001050468i[UHCI  ] new IRQ line = 9
00001052363i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00001052595i[ACPI  ] new IRQ line = 11
00001052607i[ACPI  ] new IRQ line = 9
00001052632i[ACPI  ] new PM base address: 0xb000
00001052646i[ACPI  ] new SM base address: 0xb100
00001052674i[PCI   ] setting SMRAM control register to 0x4a
00001216767i[CPU0  ] Enter to System Management Mode
00001216767i[CPU0  ] enter_system_management_mode: temporary disable VMX while in SMM mode
00001216777i[CPU0  ] RSM: Resuming from System Management Mode
00001380798i[PCI   ] setting SMRAM control register to 0x0a
00001395705i[BIOS  ] MP table addr=0x000fa570 MPC table addr=0x000fa4a0 size=0xc8
00001397527i[BIOS  ] SMBIOS table addr=0x000fa580
00001399708i[BIOS  ] ACPI tables: RSDP addr=0x000fa6a0 ACPI DATA addr=0x01ff0000 size=0xf72
00001402920i[BIOS  ] Firmware waking vector 0x1ff00cc
00001404715i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00001405438i[BIOS  ] bios_table_cur_addr: 0x000fa6c4
00001534309i[VBIOS ] VGABios $Id: vgabios.c 226 2020-01-02 21:36:23Z vruppert $
00001534380i[BXVGA ] VBE known Display Interface b0c0
00001534412i[BXVGA ] VBE known Display Interface b0c5
00001537055i[VBIOS ] VBE Bios $Id: vbe.c 228 2020-01-02 23:09:02Z vruppert $
00001881381i[BIOS  ] ata0-0: PCHS=81/16/63 translation=none LCHS=81/16/63
00003408668i[XGUI  ] charmap update. Font is 9 x 16
00005758587i[BIOS  ] IDE time out
00017844207i[BIOS  ] Booting from 0000:7c00
00018006415i[BXVGA ] VBE set bpp (32)
00018006437i[BXVGA ] VBE set xres (1440)
00018006476i[BXVGA ] VBE set yres (900)
00018006514i[BXVGA ] VBE enabling x 1440, y 900, bpp 32, 5184000 bytes visible
00018263174e[CPU0  ] interrupt(long mode): gate descriptor is not valid sys seg
00018263219e[CPU0  ] check_cs(0x40bc): not a valid code segment !
00018263264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018263984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018264974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018265964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018266999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018267989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018268979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018269969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018270959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018271994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018272984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018273974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018274964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018275999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018276989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018277979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018278969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018279959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018280994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018281984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018282974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018283964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018284999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018285989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018286979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018287969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018288959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018289994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018290984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018291974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00018292469e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292514e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292559e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292604e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292649e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292694e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292739e[CPU0  ] check_cs(0x0164): not a valid code segment !
00018292755e[CPU0  ] access_write_linear(): canonical failure
00018292755e[CPU0  ] access_write_linear(): canonical failure
00018292755e[CPU0  ] access_write_linear(): canonical failure
00018292755i[CPU0  ] CPU is in long mode (active)
00018292755i[CPU0  ] CS.mode = 64 bit
00018292755i[CPU0  ] SS.mode = 64 bit
00018292755i[CPU0  ] EFER   = 0x00000500
00018292755i[CPU0  ] | RAX=ffff800000106922  RBX=ffff8000001079b0
00018292755i[CPU0  ] | RCX=ffff800000106122  RDX=00000000ffff8000
00018292755i[CPU0  ] | RSP=ffff800000000000  RBP=ffff800000007bf8
00018292755i[CPU0  ] | RSI=0000000000000008  RDI=0000000000000080
00018292755i[CPU0  ] |  R8=0000000000000000   R9=0000000000000000
00018292755i[CPU0  ] | R10=000000000000000e  R11=0000000000003848
00018292755i[CPU0  ] | R12=0000000000000000  R13=0000000000000000
00018292755i[CPU0  ] | R14=0000000000000000  R15=ffff8000001079b0
00018292755i[CPU0  ] | IOPL=0 ID vip vif ac vm RF nt of df if tf sf zf af PF cf
00018292755i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00018292755i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  FS:0010( 0002| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  GS:0010( 0002| 0|  0) 00000000 00000000 0 0
00018292755i[CPU0  ] |  MSR_FS_BASE:0000000000000000
00018292755i[CPU0  ] |  MSR_GS_BASE:0000000000000000
00018292755i[CPU0  ] | RIP=ffff800000100132 (ffff800000100132)
00018292755i[CPU0  ] | CR0=0xe0000011 CR2=0x0000000000000000
00018292755i[CPU0  ] | CR3=0x0000000000101000 CR4=0x00000020
00018292755e[CPU0  ] exception(): 3rd (12) exception with no resolution, shutdown status is 00h, resetting
00018292755i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00018292755i[CPU0  ] cpu hardware reset
00018292755i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00018292755i[CPU0  ] CPU[0] is the bootstrap processor
00018292755i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00018292755i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002028 17cbfbff
00018292755i[CPU0  ] CPUID[0x00000002]: 00000000 00000000 00000000 00000000
00018292755i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00018292755i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00018292755i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00018292755i[CPU0  ] CPUID[0x80000000]: 80000008 756e6547 6c65746e 49656e69
00018292755i[CPU0  ] CPUID[0x80000001]: 00000633 00000000 00000101 ebd3f3ff
00018292755i[CPU0  ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00018292755i[CPU0  ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00018292755i[CPU0  ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00018292755i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00018292755i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00018292755i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00018292755i[CPU0  ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00018292755i[CPU0  ] CPU Features supported:
00018292755i[CPU0  ] 		x87
00018292755i[CPU0  ] 		486ni
00018292755i[CPU0  ] 		pentium_ni
00018292755i[CPU0  ] 		p6ni
00018292755i[CPU0  ] 		mmx
00018292755i[CPU0  ] 		3dnow!
00018292755i[CPU0  ] 		debugext
00018292755i[CPU0  ] 		vme
00018292755i[CPU0  ] 		pse
00018292755i[CPU0  ] 		pae
00018292755i[CPU0  ] 		pge
00018292755i[CPU0  ] 		pse36
00018292755i[CPU0  ] 		mtrr
00018292755i[CPU0  ] 		pat
00018292755i[CPU0  ] 		sysenter_sysexit
00018292755i[CPU0  ] 		clflush
00018292755i[CPU0  ] 		sse
00018292755i[CPU0  ] 		sse2
00018292755i[CPU0  ] 		mwait
00018292755i[CPU0  ] 		vmx
00018292755i[CPU0  ] 		longmode
00018292755i[CPU0  ] 		lm_lahf_sahf
00018292755i[CPU0  ] 		nx
00018292755i[CPU0  ] 		cmpxhg16b
00018292755i[CPU0  ] 		rdtscp
00018292755i[CPU0  ] 		ffxsr
00018292755i[CPU0  ] 		xapic
00018292755i[PLUGIN] reset of 'pci' plugin device by virtual method
00018292755i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00018292755i[PLUGIN] reset of 'cmos' plugin device by virtual method
00018292755i[PLUGIN] reset of 'dma' plugin device by virtual method
00018292755i[PLUGIN] reset of 'pic' plugin device by virtual method
00018292755i[PLUGIN] reset of 'pit' plugin device by virtual method
00018292755i[PLUGIN] reset of 'vga' plugin device by virtual method
00018292755i[PLUGIN] reset of 'floppy' plugin device by virtual method
00018292755i[PLUGIN] reset of 'acpi' plugin device by virtual method
00018292755i[PLUGIN] reset of 'hpet' plugin device by virtual method
00018292755i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00018292755i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00018292755i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00018292755i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00018292755i[PLUGIN] reset of 'serial' plugin device by virtual method
00018292755i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00018292755i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00018292755i[PLUGIN] reset of 'iodebug' plugin device by virtual method
00018292755i[PLUGIN] reset of 'parallel' plugin device by virtual method
00018292755i[PLUGIN] reset of 'speaker' plugin device by virtual method
00018292755i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00018292755i[PLUGIN] reset of 'gameport' plugin device by virtual method
00018292755i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00018297417i[BIOS  ] $Revision: 12579 $ $Date: 2014-12-26 11:31:39 +0100 (Fr, 26. Dez 2014) $
00018612066i[KBD   ] reset-disable command received
00018614797i[BIOS  ] Starting rombios32
00018615235i[BIOS  ] Shutdown flag 0
00018615818i[BIOS  ] ram_size=0x02000000
00018616239i[BIOS  ] ram_end=32MB
00018656769i[BIOS  ] Found 1 cpu(s)
00018670973i[BIOS  ] bios_table_addr: 0x000fa498 end=0x000fcc00
00018998768i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00019326697i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00019326716i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00019326735i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00019326754i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00019326764i[P2ISA ] write: ELCR2 = 0x0a
00019327534i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00019335257i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00019337536i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00019339654i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00019340495i[BIOS  ] region 4: 0x0000c000
00019342506i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00019343322i[BIOS  ] region 4: 0x0000c020
00019343447i[UHCI  ] new IRQ line = 9
00019345342i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00019345574i[ACPI  ] new IRQ line = 11
00019345586i[ACPI  ] new IRQ line = 9
00019345653i[PCI   ] setting SMRAM control register to 0x4a
00019509746i[CPU0  ] Enter to System Management Mode
00019509746i[CPU0  ] enter_system_management_mode: temporary disable VMX while in SMM mode
00019509756i[CPU0  ] RSM: Resuming from System Management Mode
00019673777i[PCI   ] setting SMRAM control register to 0x0a
00019688684i[BIOS  ] MP table addr=0x000fa570 MPC table addr=0x000fa4a0 size=0xc8
00019690506i[BIOS  ] SMBIOS table addr=0x000fa580
00019692687i[BIOS  ] ACPI tables: RSDP addr=0x000fa6a0 ACPI DATA addr=0x01ff0000 size=0xf72
00019695899i[BIOS  ] Firmware waking vector 0x1ff00cc
00019697694i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00019698417i[BIOS  ] bios_table_cur_addr: 0x000fa6c4
00019827288i[VBIOS ] VGABios $Id: vgabios.c 226 2020-01-02 21:36:23Z vruppert $
00019827359i[BXVGA ] VBE known Display Interface b0c0
00019827391i[BXVGA ] VBE known Display Interface b0c5
00019830034i[VBIOS ] VBE Bios $Id: vbe.c 228 2020-01-02 23:09:02Z vruppert $
00019830199i[BXVGA ] VBE disabling
00020174360i[BIOS  ] ata0-0: PCHS=81/16/63 translation=none LCHS=81/16/63
00024051566i[BIOS  ] IDE time out
00036117072i[BIOS  ] Booting from 0000:7c00
00036279280i[BXVGA ] VBE set bpp (32)
00036279302i[BXVGA ] VBE set xres (1440)
00036279341i[BXVGA ] VBE set yres (900)
00036279379i[BXVGA ] VBE enabling x 1440, y 900, bpp 32, 5184000 bytes visible
00036536039e[CPU0  ] interrupt(long mode): gate descriptor is not valid sys seg
00036536084e[CPU0  ] check_cs(0x40bc): not a valid code segment !
00036536129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036536984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036537974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036538964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036539999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036540989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036541979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036542969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036543959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036544994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036545984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036546974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036547964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036548999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036549989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036550979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036551969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036552959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036553994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036554984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036555974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556334e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556379e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556424e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556469e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556514e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556559e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556604e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556649e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556694e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556739e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556784e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556829e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556874e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556919e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036556964e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557009e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557054e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557099e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557144e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557189e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557234e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557279e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557324e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557369e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557414e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557459e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557504e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557549e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557594e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557639e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557684e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557729e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557774e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557819e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557864e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557909e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557954e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036557999e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558044e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558089e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558134e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558179e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558224e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558269e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558314e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558359e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558404e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558449e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558494e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558539e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558584e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558629e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558674e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558719e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558764e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558809e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558854e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558899e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558944e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036558989e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559034e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559079e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559124e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559169e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559214e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559259e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559304e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559349e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559394e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559439e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559484e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559529e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559574e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559619e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559664e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559709e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559754e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559799e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559844e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559889e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559934e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036559979e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560024e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560069e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560114e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560159e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560204e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560249e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560294e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560339e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560384e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560429e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560474e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560519e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560564e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560609e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560654e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560699e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560744e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560789e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560834e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560879e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560924e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036560969e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561014e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561059e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561104e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561149e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561194e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561239e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561284e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561329e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561374e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561419e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561464e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561509e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561554e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561599e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561644e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561689e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561734e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561779e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561824e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561869e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561914e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036561959e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562004e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562049e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562094e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562139e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562184e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562229e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562274e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562319e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562364e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562409e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562454e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562499e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562544e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562589e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562634e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562679e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562724e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562769e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562814e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562859e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562904e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562949e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036562994e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563039e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563084e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563129e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563174e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563219e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563264e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563309e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563354e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563399e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563444e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563489e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563534e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563579e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563624e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563669e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563714e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563759e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563804e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563849e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563894e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563939e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036563984e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564029e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564074e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564119e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564164e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564209e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564254e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564299e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564344e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564389e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564434e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564479e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564524e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564569e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564614e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564659e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564704e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564749e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564794e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564839e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564884e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564929e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036564974e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565019e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565064e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565109e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565154e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565199e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565244e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565289e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00036565334e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565379e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565424e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565469e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565514e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565559e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565604e[CPU0  ] check_cs(0x0164): not a valid code segment !
00036565620e[CPU0  ] access_write_linear(): canonical failure
00036565620e[CPU0  ] access_write_linear(): canonical failure
00036565620e[CPU0  ] access_write_linear(): canonical failure
00036565620i[CPU0  ] CPU is in long mode (active)
00036565620i[CPU0  ] CS.mode = 64 bit
00036565620i[CPU0  ] SS.mode = 64 bit
00036565620i[CPU0  ] EFER   = 0x00000500
00036565620i[CPU0  ] | RAX=ffff800000106922  RBX=ffff8000001079b0
00036565620i[CPU0  ] | RCX=ffff800000106122  RDX=00000000ffff8000
00036565620i[CPU0  ] | RSP=ffff800000000000  RBP=ffff800000007bf8
00036565620i[CPU0  ] | RSI=0000000000000008  RDI=0000000000000080
00036565620i[CPU0  ] |  R8=0000000000000000   R9=0000000000000000
00036565620i[CPU0  ] | R10=000000000000000e  R11=0000000000003848
00036565620i[CPU0  ] | R12=0000000000000000  R13=0000000000000000
00036565620i[CPU0  ] | R14=0000000000000000  R15=ffff8000001079b0
00036565620i[CPU0  ] | IOPL=0 ID vip vif ac vm RF nt of df if tf sf zf af PF cf
00036565620i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00036565620i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  FS:0010( 0002| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  GS:0010( 0002| 0|  0) 00000000 00000000 0 0
00036565620i[CPU0  ] |  MSR_FS_BASE:0000000000000000
00036565620i[CPU0  ] |  MSR_GS_BASE:0000000000000000
00036565620i[CPU0  ] | RIP=ffff800000100132 (ffff800000100132)
00036565620i[CPU0  ] | CR0=0xe0000011 CR2=0x0000000000000000
00036565620i[CPU0  ] | CR3=0x0000000000101000 CR4=0x00000020
00036565620e[CPU0  ] exception(): 3rd (12) exception with no resolution, shutdown status is 00h, resetting
00036565620i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00036565620i[CPU0  ] cpu hardware reset
00036565620i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00036565620i[CPU0  ] CPU[0] is the bootstrap processor
00036565620i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00036565620i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002028 17cbfbff
00036565620i[CPU0  ] CPUID[0x00000002]: 00000000 00000000 00000000 00000000
00036565620i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00036565620i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00036565620i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00036565620i[CPU0  ] CPUID[0x80000000]: 80000008 756e6547 6c65746e 49656e69
00036565620i[CPU0  ] CPUID[0x80000001]: 00000633 00000000 00000101 ebd3f3ff
00036565620i[CPU0  ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00036565620i[CPU0  ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00036565620i[CPU0  ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00036565620i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00036565620i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00036565620i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00036565620i[CPU0  ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00036565620i[CPU0  ] CPU Features supported:
00036565620i[CPU0  ] 		x87
00036565620i[CPU0  ] 		486ni
00036565620i[CPU0  ] 		pentium_ni
00036565620i[CPU0  ] 		p6ni
00036565620i[CPU0  ] 		mmx
00036565620i[CPU0  ] 		3dnow!
00036565620i[CPU0  ] 		debugext
00036565620i[CPU0  ] 		vme
00036565620i[CPU0  ] 		pse
00036565620i[CPU0  ] 		pae
00036565620i[CPU0  ] 		pge
00036565620i[CPU0  ] 		pse36
00036565620i[CPU0  ] 		mtrr
00036565620i[CPU0  ] 		pat
00036565620i[CPU0  ] 		sysenter_sysexit
00036565620i[CPU0  ] 		clflush
00036565620i[CPU0  ] 		sse
00036565620i[CPU0  ] 		sse2
00036565620i[CPU0  ] 		mwait
00036565620i[CPU0  ] 		vmx
00036565620i[CPU0  ] 		longmode
00036565620i[CPU0  ] 		lm_lahf_sahf
00036565620i[CPU0  ] 		nx
00036565620i[CPU0  ] 		cmpxhg16b
00036565620i[CPU0  ] 		rdtscp
00036565620i[CPU0  ] 		ffxsr
00036565620i[CPU0  ] 		xapic
00036565620i[PLUGIN] reset of 'pci' plugin device by virtual method
00036565620i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00036565620i[PLUGIN] reset of 'cmos' plugin device by virtual method
00036565620i[PLUGIN] reset of 'dma' plugin device by virtual method
00036565620i[PLUGIN] reset of 'pic' plugin device by virtual method
00036565620i[PLUGIN] reset of 'pit' plugin device by virtual method
00036565620i[PLUGIN] reset of 'vga' plugin device by virtual method
00036565620i[PLUGIN] reset of 'floppy' plugin device by virtual method
00036565620i[PLUGIN] reset of 'acpi' plugin device by virtual method
00036565620i[PLUGIN] reset of 'hpet' plugin device by virtual method
00036565620i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00036565620i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00036565620i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00036565620i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00036565620i[PLUGIN] reset of 'serial' plugin device by virtual method
00036565620i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00036565620i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00036565620i[PLUGIN] reset of 'iodebug' plugin device by virtual method
00036565620i[PLUGIN] reset of 'parallel' plugin device by virtual method
00036565620i[PLUGIN] reset of 'speaker' plugin device by virtual method
00036565620i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00036565620i[PLUGIN] reset of 'gameport' plugin device by virtual method
00036565620i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00036570282i[BIOS  ] $Revision: 12579 $ $Date: 2014-12-26 11:31:39 +0100 (Fr, 26. Dez 2014) $
00036884050i[KBD   ] reset-disable command received
00036886819i[BIOS  ] Starting rombios32
00036887257i[BIOS  ] Shutdown flag 0
00036887840i[BIOS  ] ram_size=0x02000000
00036888261i[BIOS  ] ram_end=32MB
00036928811i[BIOS  ] Found 1 cpu(s)
00036943015i[BIOS  ] bios_table_addr: 0x000fa498 end=0x000fcc00
00037270810i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00037598739i[P2ISA ] PCI IRQ routing: PIRQA# set to 0x0b
00037598758i[P2ISA ] PCI IRQ routing: PIRQB# set to 0x09
00037598777i[P2ISA ] PCI IRQ routing: PIRQC# set to 0x0b
00037598796i[P2ISA ] PCI IRQ routing: PIRQD# set to 0x09
00037598806i[P2ISA ] write: ELCR2 = 0x0a
00037599576i[BIOS  ] PIIX3/PIIX4 init: elcr=00 0a
00037607299i[BIOS  ] PCI: bus=0 devfn=0x00: vendor_id=0x8086 device_id=0x1237 class=0x0600
00037609578i[BIOS  ] PCI: bus=0 devfn=0x08: vendor_id=0x8086 device_id=0x7000 class=0x0601
00037611696i[BIOS  ] PCI: bus=0 devfn=0x09: vendor_id=0x8086 device_id=0x7010 class=0x0101
00037612537i[BIOS  ] region 4: 0x0000c000
00037614548i[BIOS  ] PCI: bus=0 devfn=0x0a: vendor_id=0x8086 device_id=0x7020 class=0x0c03
00037615364i[BIOS  ] region 4: 0x0000c020
00037615489i[UHCI  ] new IRQ line = 9
00037617384i[BIOS  ] PCI: bus=0 devfn=0x0b: vendor_id=0x8086 device_id=0x7113 class=0x0680
00037617616i[ACPI  ] new IRQ line = 11
00037617628i[ACPI  ] new IRQ line = 9
00037617695i[PCI   ] setting SMRAM control register to 0x4a
00037781788i[CPU0  ] Enter to System Management Mode
00037781788i[CPU0  ] enter_system_management_mode: temporary disable VMX while in SMM mode
00037781798i[CPU0  ] RSM: Resuming from System Management Mode
00037945819i[PCI   ] setting SMRAM control register to 0x0a
00037960726i[BIOS  ] MP table addr=0x000fa570 MPC table addr=0x000fa4a0 size=0xc8
00037962548i[BIOS  ] SMBIOS table addr=0x000fa580
00037964729i[BIOS  ] ACPI tables: RSDP addr=0x000fa6a0 ACPI DATA addr=0x01ff0000 size=0xf72
00037967941i[BIOS  ] Firmware waking vector 0x1ff00cc
00037969736i[PCI   ] i440FX PMC write to PAM register 59 (TLB Flush)
00037970459i[BIOS  ] bios_table_cur_addr: 0x000fa6c4
00038099330i[VBIOS ] VGABios $Id: vgabios.c 226 2020-01-02 21:36:23Z vruppert $
00038099401i[BXVGA ] VBE known Display Interface b0c0
00038099433i[BXVGA ] VBE known Display Interface b0c5
00038102076i[VBIOS ] VBE Bios $Id: vbe.c 228 2020-01-02 23:09:02Z vruppert $
00038102241i[BXVGA ] VBE disabling
00038446402i[BIOS  ] ata0-0: PCHS=81/16/63 translation=none LCHS=81/16/63
00042323608i[BIOS  ] IDE time out
00054389934i[BIOS  ] Booting from 0000:7c00
00054552142i[BXVGA ] VBE set bpp (32)
00054552164i[BXVGA ] VBE set xres (1440)
00054552203i[BXVGA ] VBE set yres (900)
00054552241i[BXVGA ] VBE enabling x 1440, y 900, bpp 32, 5184000 bytes visible
00054808901e[CPU0  ] interrupt(long mode): gate descriptor is not valid sys seg
00054808946e[CPU0  ] check_cs(0x40bc): not a valid code segment !
00054808991e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809036e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809081e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809126e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809171e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809216e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809261e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809306e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809351e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809396e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809441e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809486e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809531e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809576e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809621e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809666e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809711e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809756e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809801e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809846e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809891e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809936e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054809981e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810026e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810071e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810116e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810161e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810206e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810251e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810296e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810341e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810386e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810431e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810476e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810521e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810566e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810611e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810656e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810701e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810746e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810791e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810836e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810881e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810926e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054810971e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811016e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811061e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811106e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811151e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811196e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811241e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811286e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811331e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811376e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811421e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811466e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811511e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811556e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811601e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811646e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811691e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811736e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811781e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811826e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811871e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811916e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054811961e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812006e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812051e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812096e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812141e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812186e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812231e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812276e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812321e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812366e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812411e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812456e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812501e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812546e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812591e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812636e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812681e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812726e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812771e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812816e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812861e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812906e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812951e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054812996e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813041e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813086e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813131e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813176e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813221e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813266e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813311e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813356e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813401e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813446e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813491e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813536e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813581e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813626e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813671e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813716e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813761e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813806e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813851e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813896e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813941e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054813986e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814031e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814076e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814121e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814166e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814211e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814256e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814301e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814346e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814391e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814436e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814481e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814526e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814571e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814616e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814661e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814706e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814751e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814796e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814841e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814886e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814931e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054814976e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815021e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815066e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815111e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815156e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815201e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815246e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815291e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815336e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815381e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815426e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815471e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815516e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815561e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815606e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815651e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815696e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815741e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815786e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815831e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815876e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815921e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054815966e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816011e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816056e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816101e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816146e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816191e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816236e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816281e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816326e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816371e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816416e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816461e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816506e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816551e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816596e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816641e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816686e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816731e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816776e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816821e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816866e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816911e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054816956e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817001e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817046e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817091e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817136e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817181e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817226e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817271e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817316e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817361e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817406e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817451e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817496e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817541e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817586e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817631e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817676e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817721e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817766e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817811e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817856e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817901e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817946e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054817991e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818036e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818081e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818126e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818171e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818216e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818261e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818306e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818351e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818396e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818441e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818486e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818531e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818576e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818621e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818666e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818711e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818756e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818801e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818846e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818891e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818936e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054818981e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819026e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819071e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819116e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819161e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819206e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819251e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819296e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819341e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819386e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819431e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819476e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819521e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819566e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819611e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819656e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819701e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819746e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819791e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819836e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819881e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819926e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054819971e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820016e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820061e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820106e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820151e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820196e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820241e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820286e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820331e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820376e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820421e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820466e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820511e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820556e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820601e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820646e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820691e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820736e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820781e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820826e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820871e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820916e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054820961e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821006e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821051e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821096e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821141e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821186e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821231e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821276e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821321e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821366e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821411e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821456e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821501e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821546e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821591e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821636e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821681e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821726e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821771e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821816e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821861e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821906e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821951e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054821996e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822041e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822086e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822131e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822176e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822221e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822266e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822311e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822356e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822401e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822446e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822491e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822536e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822581e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822626e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822671e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822716e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822761e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822806e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822851e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822896e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822941e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054822986e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823031e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823076e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823121e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823166e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823211e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823256e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823301e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823346e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823391e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823436e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823481e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823526e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823571e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823616e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823661e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823706e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823751e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823796e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823841e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823886e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823931e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054823976e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824021e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824066e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824111e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824156e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824201e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824246e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824291e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824336e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824381e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824426e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824471e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824516e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824561e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824606e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824651e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824696e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824741e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824786e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824831e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824876e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824921e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054824966e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825011e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825056e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825101e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825146e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825191e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825236e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825281e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825326e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825371e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825416e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825461e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825506e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825551e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825596e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825641e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825686e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825731e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825776e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825821e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825866e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825911e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054825956e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826001e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826046e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826091e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826136e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826181e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826226e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826271e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826316e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826361e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826406e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826451e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826496e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826541e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826586e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826631e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826676e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826721e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826766e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826811e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826856e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826901e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826946e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054826991e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827036e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827081e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827126e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827171e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827216e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827261e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827306e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827351e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827396e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827441e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827486e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827531e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827576e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827621e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827666e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827711e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827756e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827801e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827846e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827891e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827936e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054827981e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828026e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828071e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828116e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828161e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828206e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828251e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828296e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828341e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828386e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828431e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828476e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828521e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828566e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828611e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828656e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828701e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828746e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828791e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828836e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828881e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828926e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054828971e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829016e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829061e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829106e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829151e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829196e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829241e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829286e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829331e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829376e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829421e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829466e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829511e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829556e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829601e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829646e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829691e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829736e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829781e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829826e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829871e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829916e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054829961e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830006e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830051e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830096e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830141e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830186e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830231e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830276e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830321e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830366e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830411e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830456e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830501e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830546e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830591e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830636e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830681e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830726e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830771e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830816e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830861e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830906e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830951e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054830996e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831041e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831086e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831131e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831176e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831221e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831266e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831311e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831356e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831401e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831446e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831491e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831536e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831581e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831626e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831671e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831716e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831761e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831806e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831851e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831896e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831941e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054831986e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832031e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832076e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832121e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832166e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832211e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832256e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832301e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832346e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832391e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832436e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832481e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832526e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832571e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832616e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832661e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832706e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832751e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832796e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832841e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832886e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832931e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054832976e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833021e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833066e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833111e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833156e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833201e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833246e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833291e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833336e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833381e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833426e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833471e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833516e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833561e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833606e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833651e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833696e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833741e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833786e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833831e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833876e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833921e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054833966e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834011e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834056e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834101e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834146e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834191e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834236e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834281e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834326e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834371e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834416e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834461e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834506e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834551e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834596e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834641e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834686e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834731e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834776e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834821e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834866e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834911e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054834956e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835001e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835046e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835091e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835136e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835181e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835226e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835271e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835316e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835361e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835406e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835451e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835496e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835541e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835586e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835631e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835676e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835721e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835766e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835811e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835856e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835901e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835946e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054835991e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836036e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836081e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836126e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836171e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836216e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836261e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836306e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836351e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836396e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836441e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836486e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836531e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836576e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836621e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836666e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836711e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836756e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836801e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836846e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836891e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836936e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054836981e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837026e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837071e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837116e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837161e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837206e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837251e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837296e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837341e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837386e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837431e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837476e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837521e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837566e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837611e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837656e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837701e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837746e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837791e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837836e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837881e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837926e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054837971e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054838016e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054838061e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054838106e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054838151e[CPU0  ] check_cs(0x0164): conforming code seg descriptor dpl > cpl, dpl=3, cpl=0
00054838196e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838241e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838286e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838331e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838376e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838421e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838466e[CPU0  ] check_cs(0x0164): not a valid code segment !
00054838482e[CPU0  ] access_write_linear(): canonical failure
00054838482e[CPU0  ] access_write_linear(): canonical failure
00054838482e[CPU0  ] access_write_linear(): canonical failure
00054838482i[CPU0  ] CPU is in long mode (active)
00054838482i[CPU0  ] CS.mode = 64 bit
00054838482i[CPU0  ] SS.mode = 64 bit
00054838482i[CPU0  ] EFER   = 0x00000500
00054838482i[CPU0  ] | RAX=ffff800000106922  RBX=ffff8000001079b0
00054838482i[CPU0  ] | RCX=ffff800000106122  RDX=00000000ffff8000
00054838482i[CPU0  ] | RSP=ffff800000000000  RBP=ffff800000007bf8
00054838482i[CPU0  ] | RSI=0000000000000008  RDI=0000000000000080
00054838482i[CPU0  ] |  R8=0000000000000000   R9=0000000000000000
00054838482i[CPU0  ] | R10=000000000000000e  R11=0000000000003848
00054838482i[CPU0  ] | R12=0000000000000000  R13=0000000000000000
00054838482i[CPU0  ] | R14=0000000000000000  R15=ffff8000001079b0
00054838482i[CPU0  ] | IOPL=0 ID vip vif ac vm RF nt of df if tf sf zf af PF cf
00054838482i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00054838482i[CPU0  ] |  CS:0008( 0001| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  DS:0010( 0002| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  SS:0010( 0002| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  ES:0010( 0002| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  FS:0010( 0002| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  GS:0010( 0002| 0|  0) 00000000 00000000 0 0
00054838482i[CPU0  ] |  MSR_FS_BASE:0000000000000000
00054838482i[CPU0  ] |  MSR_GS_BASE:0000000000000000
00054838482i[CPU0  ] | RIP=ffff800000100132 (ffff800000100132)
00054838482i[CPU0  ] | CR0=0xe0000011 CR2=0x0000000000000000
00054838482i[CPU0  ] | CR3=0x0000000000101000 CR4=0x00000020
00054838482e[CPU0  ] exception(): 3rd (12) exception with no resolution, shutdown status is 00h, resetting
00054838482i[SYS   ] bx_pc_system_c::Reset(HARDWARE) called
00054838482i[CPU0  ] cpu hardware reset
00054838482i[APIC0 ] allocate APIC id=0 (MMIO enabled) to 0x0000fee00000
00054838482i[CPU0  ] CPU[0] is the bootstrap processor
00054838482i[CPU0  ] CPUID[0x00000000]: 00000005 756e6547 6c65746e 49656e69
00054838482i[CPU0  ] CPUID[0x00000001]: 00000633 00010800 00002028 17cbfbff
00054838482i[CPU0  ] CPUID[0x00000002]: 00000000 00000000 00000000 00000000
00054838482i[CPU0  ] CPUID[0x00000003]: 00000000 00000000 00000000 00000000
00054838482i[CPU0  ] CPUID[0x00000004]: 00000000 00000000 00000000 00000000
00054838482i[CPU0  ] CPUID[0x00000005]: 00000040 00000040 00000003 00000020
00054838482i[CPU0  ] CPUID[0x80000000]: 80000008 756e6547 6c65746e 49656e69
00054838482i[CPU0  ] CPUID[0x80000001]: 00000633 00000000 00000101 ebd3f3ff
00054838482i[CPU0  ] CPUID[0x80000002]: 20202020 20202020 20202020 6e492020
00054838482i[CPU0  ] CPUID[0x80000003]: 286c6574 50202952 69746e65 52286d75
00054838482i[CPU0  ] CPUID[0x80000004]: 20342029 20555043 20202020 00202020
00054838482i[CPU0  ] CPUID[0x80000005]: 01ff01ff 01ff01ff 40020140 40020140
00054838482i[CPU0  ] CPUID[0x80000006]: 00000000 42004200 02008140 00000000
00054838482i[CPU0  ] CPUID[0x80000007]: 00000000 00000000 00000000 00000000
00054838482i[CPU0  ] CPUID[0x80000008]: 00003028 00000000 00000000 00000000
00054838482i[CPU0  ] CPU Features supported:
00054838482i[CPU0  ] 		x87
00054838482i[CPU0  ] 		486ni
00054838482i[CPU0  ] 		pentium_ni
00054838482i[CPU0  ] 		p6ni
00054838482i[CPU0  ] 		mmx
00054838482i[CPU0  ] 		3dnow!
00054838482i[CPU0  ] 		debugext
00054838482i[CPU0  ] 		vme
00054838482i[CPU0  ] 		pse
00054838482i[CPU0  ] 		pae
00054838482i[CPU0  ] 		pge
00054838482i[CPU0  ] 		pse36
00054838482i[CPU0  ] 		mtrr
00054838482i[CPU0  ] 		pat
00054838482i[CPU0  ] 		sysenter_sysexit
00054838482i[CPU0  ] 		clflush
00054838482i[CPU0  ] 		sse
00054838482i[CPU0  ] 		sse2
00054838482i[CPU0  ] 		mwait
00054838482i[CPU0  ] 		vmx
00054838482i[CPU0  ] 		longmode
00054838482i[CPU0  ] 		lm_lahf_sahf
00054838482i[CPU0  ] 		nx
00054838482i[CPU0  ] 		cmpxhg16b
00054838482i[CPU0  ] 		rdtscp
00054838482i[CPU0  ] 		ffxsr
00054838482i[CPU0  ] 		xapic
00054838482i[PLUGIN] reset of 'pci' plugin device by virtual method
00054838482i[PLUGIN] reset of 'pci2isa' plugin device by virtual method
00054838482i[PLUGIN] reset of 'cmos' plugin device by virtual method
00054838482i[PLUGIN] reset of 'dma' plugin device by virtual method
00054838482i[PLUGIN] reset of 'pic' plugin device by virtual method
00054838482i[PLUGIN] reset of 'pit' plugin device by virtual method
00054838482i[PLUGIN] reset of 'vga' plugin device by virtual method
00054838482i[PLUGIN] reset of 'floppy' plugin device by virtual method
00054838482i[PLUGIN] reset of 'acpi' plugin device by virtual method
00054838482i[PLUGIN] reset of 'hpet' plugin device by virtual method
00054838482i[PLUGIN] reset of 'ioapic' plugin device by virtual method
00054838482i[PLUGIN] reset of 'keyboard' plugin device by virtual method
00054838482i[PLUGIN] reset of 'harddrv' plugin device by virtual method
00054838482i[PLUGIN] reset of 'pci_ide' plugin device by virtual method
00054838482i[PLUGIN] reset of 'serial' plugin device by virtual method
00054838482i[PLUGIN] reset of 'biosdev' plugin device by virtual method
00054838482i[PLUGIN] reset of 'extfpuirq' plugin device by virtual method
00054838482i[PLUGIN] reset of 'iodebug' plugin device by virtual method
00054838482i[PLUGIN] reset of 'parallel' plugin device by virtual method
00054838482i[PLUGIN] reset of 'speaker' plugin device by virtual method
00054838482i[PLUGIN] reset of 'unmapped' plugin device by virtual method
00054838482i[PLUGIN] reset of 'gameport' plugin device by virtual method
00054838482i[PLUGIN] reset of 'usb_uhci' plugin device by virtual method
00054838483i[      ] Ctrl-C detected in signal handler.
00054838483i[CPU0  ] CPU is in real mode (active)
00054838483i[CPU0  ] CS.mode = 16 bit
00054838483i[CPU0  ] SS.mode = 16 bit
00054838483i[CPU0  ] EFER   = 0x00000000
00054838483i[CPU0  ] | EAX=00000000  EBX=00000000  ECX=00000000  EDX=00000000
00054838483i[CPU0  ] | ESP=00000000  EBP=00000000  ESI=00000000  EDI=00000000
00054838483i[CPU0  ] | IOPL=0 id vip vif ac vm rf nt of df if tf sf zf af pf cf
00054838483i[CPU0  ] | SEG sltr(index|ti|rpl)     base    limit G D
00054838483i[CPU0  ] |  CS:f000( 1e00| 0|  0) ffff0000 0000ffff 0 0
00054838483i[CPU0  ] |  DS:0000( 0000| 0|  0) 00000000 0000ffff 0 0
00054838483i[CPU0  ] |  SS:0000( 0000| 0|  0) 00000000 0000ffff 0 0
00054838483i[CPU0  ] |  ES:0000( 0000| 0|  0) 00000000 0000ffff 0 0
00054838483i[CPU0  ] |  FS:0000( 0000| 0|  0) 00000000 0000ffff 0 0
00054838483i[CPU0  ] |  GS:0000( 0000| 0|  0) 00000000 0000ffff 0 0
00054838483i[CPU0  ] | EIP=0000fff0 (0000fff0)
00054838483i[CPU0  ] | CR0=0x60000010 CR2=0x00000000
00054838483i[CPU0  ] | CR3=0x00000000 CR4=0x00000000
00054838483i[CMOS  ] Last time is 1683155952 (Thu May  4 07:19:12 2023)
00054838483i[XGUI  ] Exit
00054838483i[SIM   ] quit_sim called with exit code 1
